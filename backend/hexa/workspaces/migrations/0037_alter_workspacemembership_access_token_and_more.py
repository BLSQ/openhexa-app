# Generated by Django 4.1.7 on 2023-09-25 07:54
import uuid

from django.db import migrations, models


def generate_tokens(apps, schema_editor):
    WorkspaceMembership = apps.get_model("workspaces", "WorkspaceMembership")

    # Filter the instances without access_token
    memberships_without_token = WorkspaceMembership.objects.filter(
        models.Q(access_token__isnull=True) | models.Q(access_token="")
    )

    for membership in memberships_without_token:
        membership.access_token = uuid.uuid4()
        membership.save()


class Migration(migrations.Migration):
    dependencies = [
        ("workspaces", "0036_service_account_key_migration"),
    ]

    operations = [
        migrations.RunPython(generate_tokens, reverse_code=migrations.RunPython.noop),
        migrations.AlterField(
            model_name="workspacemembership",
            name="access_token",
            field=models.TextField(
                blank=True,
                help_text="Access token that can be used to interact with the OpenHEXA API (will be generated automatically, set to empty to regenerate a new token)",
                max_length=50,
                unique=True,
            ),
        ),
        migrations.AlterField(
            model_name="workspacemembership",
            name="notebooks_server_hash",
            field=models.TextField(
                blank=True,
                editable=False,
                help_text="Can be used to identify a notebook server for a given user and workspace (will be generated automatically)",
                unique=True,
            ),
        ),
    ]
