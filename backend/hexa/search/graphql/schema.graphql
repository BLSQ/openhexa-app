interface SearchResult {
  score: Float!
}

type DatasetResult implements SearchResult {
  dataset: Dataset!
  score: Float!
}

type DatasetResultPage {
  pageNumber: Int!
  totalPages: Int!
  totalItems: Int!
  items: [DatasetResult!]!
}

type PipelineResult implements SearchResult {
  pipeline: Pipeline!
  score: Float!
}

type PipelineResultPage {
  pageNumber: Int!
  totalPages: Int!
  totalItems: Int!
  items: [PipelineResult!]!
}

type PipelineTemplateResult implements SearchResult {
  pipelineTemplate: PipelineTemplate!
  score: Float!
}

type PipelineTemplateResultPage {
  pageNumber: Int!
  totalPages: Int!
  totalItems: Int!
  items: [PipelineTemplateResult!]!
}

type DatabaseTableResult implements SearchResult {
  databaseTable: DatabaseTable!
  workspace: Workspace!
  score: Float!
}

type DatabaseTableResultPage {
  pageNumber: Int!
  totalPages: Int!
  totalItems: Int!
  items: [DatabaseTableResult!]!
}

type BucketObjectResult implements SearchResult {
  file: BucketObject!
  workspace: Workspace!
  score: Float!
}

type BucketObjectResultPage {
  pageNumber: Int!
  totalPages: Int!
  totalItems: Int!
  items: [BucketObjectResult!]!
}

extend type Query {
  searchDatasets(query: String!, page: Int = 1, perPage: Int = 15, workspaceSlugs: [String], organizationId: UUID): DatasetResultPage! @loginRequired
  searchPipelines(query: String!, page: Int = 1, perPage: Int = 15, workspaceSlugs: [String], organizationId: UUID): PipelineResultPage! @loginRequired
  searchPipelineTemplates(query: String!, page: Int = 1, perPage: Int = 15, workspaceSlugs: [String], organizationId: UUID): PipelineTemplateResultPage! @loginRequired
  searchDatabaseTables(query: String!, page: Int = 1, perPage: Int = 15, workspaceSlugs: [String], organizationId: UUID): DatabaseTableResultPage! @loginRequired
  searchFiles(query: String!, page: Int = 1, perPage: Int = 15, workspaceSlugs: [String], organizationId: UUID): BucketObjectResultPage! @loginRequired
}
