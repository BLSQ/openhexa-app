# Generated by Django 5.1 on 2024-12-12 10:49

import uuid

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("pipelines", "0053_pipelinerun_log_level"),
        (
            "workspaces",
            "0044_remove_workspaceinvitation_workspace_invitation_unique_workspace_email",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="Template",
            fields=[
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                (
                    "restored_at",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(blank=True, max_length=200, null=True)),
                ("code", models.CharField(default="", max_length=200)),
                ("description", models.TextField(blank=True)),
                ("config", models.JSONField(blank=True, default=dict)),
                (
                    "source_pipeline",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="template",
                        to="pipelines.pipeline",
                    ),
                ),
                (
                    "workspace",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="workspaces.workspace",
                    ),
                ),
            ],
            options={
                "verbose_name": "Template",
            },
        ),
        migrations.CreateModel(
            name="TemplateVersion",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("version_number", models.PositiveIntegerField(editable=False)),
                (
                    "source_pipeline_version",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="template_version",
                        to="pipelines.pipelineversion",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="versions",
                        to="template_pipelines.template",
                    ),
                ),
            ],
            options={
                "ordering": ("-created_at",),
            },
        ),
        migrations.AddConstraint(
            model_name="template",
            constraint=models.UniqueConstraint(
                models.F("workspace_id"),
                models.F("code"),
                condition=models.Q(("deleted_at__isnull", True)),
                name="unique_template_code_per_workspace",
            ),
        ),
        migrations.AddConstraint(
            model_name="template",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted_at__isnull", True)),
                fields=("name",),
                name="unique_template_name",
            ),
        ),
        migrations.AddIndex(
            model_name="templateversion",
            index=models.Index(
                fields=["template", "version_number"],
                name="index_template_version_number",
            ),
        ),
        migrations.AddConstraint(
            model_name="templateversion",
            constraint=models.UniqueConstraint(
                fields=("template", "version_number"),
                name="unique_template_version_number",
            ),
        ),
    ]
