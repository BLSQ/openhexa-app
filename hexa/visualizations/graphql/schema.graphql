type ExternalDashboard {
  id: String!
  name: String!
  url: URL!
  pictureUrl: URL!
  createdAt: DateTime!
  updatedAt: DateTime!
  description: String
  countries: [Country!]!
  tags: [Tag!]!
}

type ExternalDashboardPage {
  items: [ExternalDashboard!]!
  pageNumber: Int!
  totalPages: Int!
  totalItems: Int!
}

extend type Query {
  externalDashboards(page: Int, perPage: Int): ExternalDashboardPage! @login_required
  externalDashboard(id: String!): ExternalDashboard @login_required
}

input UpdateExternalDashboardInput {
  id: String!
  description: String
  name: String
  countries: [CountryInput!] 
}

enum UpdateExternalDashboardError {
    INVALID
    NOT_FOUND
}

type UpdateExternalDashboardResult {
  success: Boolean!
  errors: [UpdateExternalDashboardError!]!
  externalDashboard: ExternalDashboard
}

extend type Mutation{
  updateExternalDashboard(input: UpdateExternalDashboardInput!): UpdateExternalDashboardResult! @login_required
}
