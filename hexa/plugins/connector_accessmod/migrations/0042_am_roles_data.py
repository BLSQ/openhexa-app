# Generated by Django 4.0.4 on 2022-05-17 07:26

from django.db import migrations


def forward(apps, schema_editor):
    Fileset = apps.get_model("connector_accessmod", "Fileset")
    FilesetRole = apps.get_model("connector_accessmod", "FilesetRole")

    # first, let's remove all fileset with the "SLOPE" role - as they won't be used anymore - and the role itself
    Fileset.objects.filter(role__code="SLOPE").delete()
    FilesetRole.objects.filter(code="SLOPE").delete()

    # then let's create the roles in the database (if they don't exist)
    for name, code, format in [
        ("Barriers", "BARRIER", "VECTOR"),
        ("Catchment Areas", "CATCHMENT_AREAS", "VECTOR"),
        ("Coverage", "COVERAGE", "TABULAR"),
        ("Digital Elevation Model", "DEM", "RASTER"),
        ("Friction Surface", "FRICTION_SURFACE", "RASTER"),
        ("Geometry", "GEOMETRY", "VECTOR"),
        ("Health Facilities", "HEALTH_FACILITIES", "VECTOR"),
        ("Land cover", "LAND_COVER", "RASTER"),
        ("Moving speeds", "MOVING_SPEEDS", "TABULAR"),
        ("Population", "POPULATION", "RASTER"),
        ("Stack", "STACK", "RASTER"),
        ("Transport network", "TRANSPORT_NETWORK", "VECTOR"),
        ("Travel times", "TRAVEL_TIMES", "RASTER"),
        ("Water", "WATER", "VECTOR"),
    ]:
        FilesetRole.objects.get_or_create(
            name=name, format=format, defaults={"code": code}
        )

    # if we have filesets with "TO ACQUIRE" as status, let's update the value to "TO_ACQUIRE"
    Fileset.objects.filter(status="TO ACQUIRE").update(status="TO_ACQUIRE")


class Migration(migrations.Migration):
    dependencies = [
        ("connector_accessmod", "0041_alter_fileset_status"),
    ]

    operations = [
        migrations.RunPython(forward, reverse_code=migrations.RunPython.noop),
    ]
