extend type Mutation {
  """
  Creates a new pipeline template version.
  """
  createPipelineTemplateVersion(input: CreatePipelineTemplateVersionInput!): CreatePipelineTemplateVersionResult! @loginRequired
  createPipelineFromTemplateVersion(input: CreatePipelineFromTemplateVersionInput!): CreatePipelineFromTemplateVersionResult! @loginRequired
}

"""
Represents the input for creating a new pipeline template version.
"""
input CreatePipelineTemplateVersionInput {
  name: String  # The name of the pipeline template.
  code: String  # The code of the pipeline template.
  description: String  # The description of the pipeline template.
  config: String  # The configuration of the pipeline template.
  workspaceSlug: String!  # The slug of the pipeline workspace.
  pipelineId: UUID!  # The ID of the pipeline.
  pipelineVersionId: UUID!  # The ID of the pipeline version.
}

"""
Represents the result of creating a new pipeline template version.
"""
type CreatePipelineTemplateVersionResult {
  pipelineTemplate: PipelineTemplate  # The created pipeline template.
  success: Boolean!  # Indicates if the pipeline template version was created successfully.
  errors: [CreatePipelineTemplateVersionError!]  # The list of errors that occurred during the creation of the pipeline template version.
}

"""
Represents the input for creating a new pipeline from a template version.
"""
input CreatePipelineFromTemplateVersionInput {
  workspaceSlug: String!  # The slug of the pipeline workspace.
  pipelineTemplateVersionId: UUID!  # The ID of the pipeline template version.
}

"""
Represents the result of creating a new pipeline from a template version.
"""
type CreatePipelineFromTemplateVersionResult {
  pipeline: Pipeline  # The created pipeline.
  success: Boolean!  # Indicates if the pipeline was created successfully.
  errors: [CreatePipelineFromTemplateVersionError!]  # The list of errors that occurred during the creation of the pipeline.
}

"""
Enum representing the possible errors that can occur when creating a pipeline from a template version.
"""
enum CreatePipelineFromTemplateVersionError {
  PERMISSION_DENIED
  WORKSPACE_NOT_FOUND
  PIPELINE_TEMPLATE_VERSION_NOT_FOUND
  PIPELINE_ALREADY_EXISTS
}

"""
Enum representing the possible errors that can occur when creating a pipeline template version.
"""
enum CreatePipelineTemplateVersionError {
  PERMISSION_DENIED
  WORKSPACE_NOT_FOUND
  PIPELINE_NOT_FOUND
  PIPELINE_VERSION_NOT_FOUND
}

"""
Represents a pipeline template.
"""
type PipelineTemplate {
  id: UUID!  # The ID of the pipeline template.
  name: String!  # The name of the pipeline template.
  code: String!  # The code of the pipeline template.
  description: String  # The description of the pipeline template.
  config: String  # The configuration of the pipeline template.
  versions: [PipelineTemplateVersion!]  # The list of versions of the pipeline template.
}

"""
Represents a version of a pipeline template.
"""
type PipelineTemplateVersion {
  id: UUID!  # The ID of the pipeline template version.
  versionNumber: Int!  # The version number of the pipeline template version.
  createdAt: String!  # The creation date of the pipeline template version.
  template: PipelineTemplate!  # The pipeline template associated with the version.
}

"""
Represents the permissions for a pipeline template.
"""
type PipelineTemplatePermissions {
  createVersion: Boolean!  # Indicates if a new version of the pipeline template can be created.
}

"""
Represents the permissions for a pipeline template version.
"""
type PipelineTemplateVersionPermissions {
  update: Boolean!  # Indicates if the pipeline template version can be updated.
  delete: Boolean!  # Indicates if the pipeline template version can be deleted.
}

extend type WorkspacePermissions {
  createPipelineTemplateVersion: Boolean!  # Indicates if a pipeline template version can be created in the workspace.
}
extend type MePermissions {
  # Indicates whether the user can create a pipeline template version.
  createPipelineTemplateVersion: Boolean!
}