name: Build Docker Images

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: Image tag
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_backend:
    name: Build Backend Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Store version number (on release)
        if: ${{ github.event_name == 'release' }}
        id: version
        run: echo "number=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT

      - name: Cache Docker build dependencies
        id: cache-backend
        uses: actions/cache@v4
        with:
          path: |
            var-cache-apt
            var-lib-apt
            root-.cache
          key: backend-cache-${{ hashFiles('backend/Dockerfile') }}

      - name: Inject caches into Docker
        uses: reproducible-containers/buildkit-cache-dance@v3.1.2
        with:
          cache-map: |
            {
              "var-cache-apt": "/var/cache/apt",
              "var-lib-apt": "/var/lib/apt",
              "root-.cache": "/root/.cache"
            }
          skip-extraction: ${{ steps.cache-backend.outputs.cache-hit }}

      - name: Build and push (release)
        if: ${{ github.event_name == 'release' }}
        uses: docker/build-push-action@v6
        with:
          push: true
          context: backend
          file: backend/Dockerfile
          tags: |
            yolanfe/yf:${{ steps.version.outputs.number }}
          build-args: |
            DJANGO_SETTINGS_MODULE=config.settings.dev
          cache-from: type=registry,ref=yolanfe/yf:buildcache
          cache-to: type=registry,ref=yolanfe/yf:buildcache,mode=max

      - name: Build and push (manual)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: docker/build-push-action@v6
        with:
          push: true
          context: backend
          file: backend/Dockerfile
          tags: |
            yolanfe/yf:${{ github.event.inputs.tag }}
          build-args: |
            DJANGO_SETTINGS_MODULE=config.settings.dev
          cache-from: type=registry,ref=yolanfe/yf:buildcache
          cache-to: type=registry,ref=yolanfe/yf:buildcache,mode=max

  build_frontend:
    name: Build Frontend Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Store version number (on release)
        if: ${{ github.event_name == 'release' }}
        id: version
        run: echo "number=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker build dependencies
        id: cache-frontend
        uses: actions/cache@v4
        with:
          path: |
            var-cache-apk
            code-next-cache
            code-.npm-cache
          key: frontend-cache-${{ hashFiles('frontend/Dockerfile') }}

      - name: Inject caches into Docker
        uses: reproducible-containers/buildkit-cache-dance@v3.1.2
        with:
          cache-map: |
            {
              "var-cache-apk": "/var/cache/apk",
              "code-next-cache": "/code/.next/cache",
              "code-.npm-cache": "~/.npm"
            }
          skip-extraction: ${{ steps.cache-frontend.outputs.cache-hit }}

      - name: Build and push (release)
        if: ${{ github.event_name == 'release' }}
        uses: docker/build-push-action@v6
        with:
          push: true
          context: frontend
          file: frontend/Dockerfile
          tags: |
            yolanfe/yf-frontend:${{ steps.version.outputs.number }}
            yolanfe/yf-frontend:latest
          cache-from: type=registry,ref=yolanfe/yf-frontend:buildcache
          cache-to: type=registry,ref=yolanfe/yf-frontend:buildcache,mode=max
          build-args: |
            "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}"
            "RELEASE=${{ steps.version.outputs.number }}"

      - name: Build and push (manual)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: docker/build-push-action@v6
        with:
          context: frontend
          push: true
          file: frontend/Dockerfile
          tags: |
            yolanfe/yf-frontend:${{ github.event.inputs.tag }}
            yolanfe/yf-frontend:latest
          cache-from: type=registry,ref=yolanfe/yf-frontend:buildcache
          cache-to: type=registry,ref=yolanfe/yf-frontend:buildcache,mode=max
          build-args: |
            "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}"
            "RELEASE=${{ steps.version.outputs.number }}"

      - name: Build and push (pull request)
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker/build-push-action@v6
        with:
          context: frontend
          push: true
          tags: |
            yolanfe/yf-frontend:pr-${{ github.event.pull_request.number }}
          cache-from: type=registry,ref=yolanfe/yf-frontend:buildcache

      - name: Build and push (main branch)
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: docker/build-push-action@v6
        with:
          context: frontend
          push: true
          tags: |
            yolanfe/yf-frontend:main
          cache-from: type=registry,ref=yolanfe/yf-frontend:buildcache