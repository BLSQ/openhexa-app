name: Import Terraform state
on:
  workflow_dispatch:
    inputs:
      environment:
        description: Name of the environment (in Github)
        required: true
        default: test

jobs:
  import_terraform_state:
    name: Import Terraform state
    environment:
      name: ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.TERRAFORM_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.TERRAFORM_AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      GOOGLE_CREDENTIALS: ${{ secrets.TERRAFORM_GOOGLE_CREDENTIALS }}

    steps:
      # Checkout code
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # fetch all history for all branches and tags

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform
      # Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@3d8debd658c92063839bc97da5c2427100420dec
        with:
          terraform_version: 0.15.1

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state,
      # downloading modules, etc.
      - name: Terraform Init
        run: |
          terraform -chdir=terraform_import init \
            -backend-config="bucket=${{ secrets.TERRAFORM_AWS_S3_BUCKET_NAME }}" \
            -backend-config="key=openhexa-app-${{ github.event.inputs.environment }}/terraform.tfstate" \
            -backend-config="region=${{ secrets.AWS_REGION }}"

      # Terraform import
      - name: Terraform import (sql instance)
        run: |
          terraform -chdir=terraform_import import \
            -var 'gcp_project_id=${{ secrets.GCP_PROJECT_ID }}' \
            -var 'gcp_region=${{ secrets.GCP_REGION }}' \
            -var 'gcp_zone=${{ secrets.GCP_ZONE }}' \
            -var 'gcp_sql_instance_tier=${{ secrets.GCP_SQL_INSTANCE_TIER }}' \
            -var 'gcp_sql_database_name=${{ secrets.GCP_SQL_DATABASE_NAME }}' \
            -var 'gcp_sql_user_name=${{ secrets.GCP_SQL_USER_NAME }}' \
            google_sql_database_instance.app blsq-dip-test/hexa-prime
