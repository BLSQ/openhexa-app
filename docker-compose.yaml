version: "3.9"

# Defines a service that can be reused multiple times later
x-app: &common
    build:
      context: .
      dockerfile: Dockerfile
      target: app
    networks:
      - openhexa
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.dev
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_NAME=hexa-app
      - DATABASE_USER=hexa-app
      - DATABASE_PASSWORD=hexa-app
      - ACCESSMOD_BUCKET_NAME=s3://hexa-demo-accessmod
      - ACCESSMOD_MANAGE_REQUESTS_URL=http://localhost:3000/admin/access-requests
      - ACCESSMOD_SET_PASSWORD_URL=http://localhost:3000/account/set-password
      - NEW_FRONTEND_DOMAIN=localhost:3000
      - PIPELINE_SCHEDULER_SPAWNER=docker
      - PIPELINE_API_URL=http://app:8000
      - PIPELINE_IMAGE
      # The following variables are optional and can be set in your local .env file for testing purposes
      - DEBUG_LOGGING
      - DEBUG_TOOLBAR
      - EMAIL_HOST
      - EMAIL_PORT
      - EMAIL_HOST_USER
      - EMAIL_USE_TLS
      - EMAIL_HOST_PASSWORD
      - WORKSPACES_DATABASE_ROLE=hexa-app
      - WORKSPACES_DATABASE_PASSWORD=hexa-app
      - WORKSPACES_DATABASE_HOST=db
      - WORKSPACES_DATABASE_PORT=5432
      - WORKSPACES_DATABASE_DEFAULT_DB=hexa-app
      - WORKSPACES_DATABASE_PROXY_HOST=db
      - WORKSPACE_DATASETS_BUCKET
      - WORKSPACE_STORAGE_ENGINE=gcp
      - WORKSPACE_BUCKET_VERSIONING_ENABLED
      - WORKSPACE_STORAGE_ENGINE_AWS_ENDPOINT_URL
      - WORKSPACE_STORAGE_ENGINE_AWS_PUBLIC_ENDPOINT_URL
      - WORKSPACE_STORAGE_ENGINE_AWS_ACCESS_KEY_ID
      - WORKSPACE_STORAGE_ENGINE_AWS_SECRET_ACCESS_KEY
      - WORKSPACE_STORAGE_ENGINE_AWS_BUCKET_REGION           
      - NOTEBOOKS_HUB_URL=http://jupyterhub:8000/hub
      - HUB_API_TOKEN=cbb352d6a412e266d7494fb014dd699373645ec8d353e00c7aa9dc79ca87800d
      - GCS_SERVICE_ACCOUNT_KEY
      - WORKSPACE_BUCKET_PREFIX=hexa-test-
      - WORKSPACE_BUCKET_REGION=europe-west1
      - AWS_USERNAME
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_ENDPOINT_URL
      - AWS_DEFAULT_REGION
      - AWS_USER_ARN
      - AWS_APP_ROLE_ARN
      - AWS_PERMISSIONS_BOUNDARY_POLICY_ARN
    volumes:  # only used for Github Codespaces
      - "${LOCAL_WORKSPACE_FOLDER:-.}:/code"
    

services:
  db:
    image: postgis/postgis:12-3.2
    networks:
      - openhexa
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=hexa-app
      - POSTGRES_USER=hexa-app
      - POSTGRES_PASSWORD=hexa-app
    ports:
      - "5432:5432"

  app:
    # Inherit from the block defined on top and override some fields
    <<: *common
    command: "manage runserver 0:8000"
    restart: unless-stopped
    container_name: app
    image: blsq/openhexa-app
    ports:
      - "8000:8000"
    depends_on:
      - db

  dataworker:
    <<: *common
    command: "manage validate_fileset_worker"
    restart: unless-stopped
    profiles:
      - "dataworker"
    depends_on:
      - db

  pipelines_runner:
    <<: *common
    
    build:
      context: .
      dockerfile: Dockerfile
      target: pipelines
    command: "manage pipelines_runner"
    restart: unless-stopped
    profiles:
      - "pipelines"
    depends_on:
      - db
    volumes:  # only used for Github Codespaces
      - "${LOCAL_WORKSPACE_FOLDER:-.}:/code"
      - /var/run/docker.sock:/var/run/docker.sock

  pipelines_scheduler:
    <<: *common
    build:
      context: .
      dockerfile: Dockerfile
      target: pipelines
    command: "manage pipelines_scheduler"
    restart: unless-stopped
    profiles:
      - "pipelines"
    depends_on:
      - db

  minio:
    image: quay.io/minio/minio
    command: server --address 0.0.0.0:9000 --console-address ":9001" /data
    volumes:
      - minio_data:/data
    profiles:
      - storage
    ports:
      - '9000:9000'
      - '9001:9001'
    networks:
      - openhexa
    environment:
      - MINIO_ACCESS_KEY=${WORKSPACE_STORAGE_ENGINE_AWS_ACCESS_KEY_ID}
      - MINIO_SECRET_KEY=${WORKSPACE_STORAGE_ENGINE_AWS_SECRET_ACCESS_KEY}


networks:
  openhexa:
    name: openhexa
    external: true
volumes:
  pgdata:
  minio_data:
